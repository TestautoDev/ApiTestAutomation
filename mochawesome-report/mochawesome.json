{
  "stats": {
    "suites": 5,
    "tests": 6,
    "passes": 3,
    "pending": 0,
    "failures": 3,
    "start": "2019-04-05T09:58:31.040Z",
    "end": "2019-04-05T09:58:37.878Z",
    "duration": 6838,
    "testsRegistered": 13,
    "passPercent": 23.1,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 7,
    "hasSkipped": true,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "a1cec4db-ecf9-4946-880f-3d5cf7bae351",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "d2c18715-8e56-45c6-a0f7-e313b78aace6",
        "title": "User",
        "fullFile": "C:\\ccviews\\ApiTestAutomation\\test\\test.spec.js",
        "file": "\\test\\test.spec.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "User \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "api.post('/locations')\n                .set('Accept', 'application/x-www-form-urlencoded')\n                .send({\n                    addressStreet: \"111 Main St\",\n                    addressCity: \"Portland\",\n                    addressState: \"OR\",\n                    addressZip: \"97209\",\n                    userId: 1\n                })\n                .expect('Content-Type', /json/)\n                .expect(200)\n                .end((err, res) => {\n                    location1 = res.body;\n                });\n            api.post('/locations')\n                .set('Accept', 'application/x-www-form-urlencoded')\n                .send({\n                    addressStreet: \"222 Main St\",\n                    addressCity: \"Portland\",\n                    addressState: \"OR\",\n                    addressZip: \"97209\",\n                    userId: 2\n                })\n                .expect('Content-Type', /json/)\n                .expect(200)\n                .end((err, res) => {\n                    location2 = res.body;\n                });\n            api.post('/locations')\n                .set('Accept', 'application/x-www-form-urlencoded')\n                .send({\n                    addressStreet: \"333 Main St\",\n                    addressCity: \"Portland\",\n                    addressState: \"OR\",\n                    addressZip: \"97209\",\n                    userId: 3\n                })\n                .expect('Content-Type', /json/)\n                .expect(200)\n                .end((err, res) => {\n                    location3 = res.body;\n                    done();\n                });",
            "err": {
              "message": "TypeError: Cannot read property 'body' of undefined",
              "estack": "TypeError: Cannot read property 'body' of undefined\n    at Test.api.post.set.send.expect.expect.end (test\\test.spec.js:29:37)\n    at Test.assert (node_modules\\supertest\\lib\\test.js:181:6)\n    at localAssert (node_modules\\supertest\\lib\\test.js:131:12)\n    at C:\\ccviews\\ApiTestAutomation\\node_modules\\supertest\\lib\\test.js:128:5\n    at Test.Request.callback (node_modules\\superagent\\lib\\node\\index.js:728:3)\n    at ClientRequest.req.once.err (node_modules\\superagent\\lib\\node\\index.js:647:10)\n    at Socket.socketErrorListener (_http_client.js:392:9)\n    at emitErrorNT (internal/streams/destroy.js:82:8)\n    at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
            },
            "isRoot": false,
            "uuid": "22e38389-8249-4ae9-a8cf-6996461c95a1",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a 200 response",
            "fullTitle": "User should return a 200 response",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "api.get('/users/1')\n    .set('Accept', 'application/json')\n    .expect(200, done);",
            "err": {},
            "isRoot": false,
            "uuid": "366048fd-e480-435b-b1f4-2dd759ee7b28",
            "isHook": false,
            "skipped": true
          },
          {
            "title": "should be an object with keys and values",
            "fullTitle": "User should be an object with keys and values",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "api.get('/users/1')\n    .set('Accept', 'application/json')\n    .expect(200)\n    .end((err, res) => {\n        expect(res.body).to.have.property(\"name\");\n        expect(res.body.name).to.not.equal(null);\n        expect(res.body).to.have.property(\"email\");\n        expect(res.body.email).to.not.equal(null);\n        expect(res.body).to.have.property(\"phoneNumber\");\n        expect(res.body.phoneNumber).to.not.equal(null);\n        expect(res.body).to.have.property(\"role\");\n        expect(res.body.role).to.not.equal(null);\n        done();\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "b8c40519-5694-41ee-9c08-630d07c541c5",
            "isHook": false,
            "skipped": true
          },
          {
            "title": "should have a 10 digit phone number",
            "fullTitle": "User should have a 10 digit phone number",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "api.get('/users/1')\n    .set('Accept', 'application/json')\n    .expect(200)\n    .end((err, res) => {\n        expect(res.body.phoneNumber.length).to.equal(10);\n        done();\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "0683a607-ec0c-44bc-a218-8646722ed9c3",
            "isHook": false,
            "skipped": true
          },
          {
            "title": "should have the role of admin",
            "fullTitle": "User should have the role of admin",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "api.get('/users/1')\n    .set('Accept', 'application/json')\n    .expect(200)\n    .end((err, res) => {\n        expect(res.body.role).to.equal(\"admin\");\n        done();\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "b204df94-8166-461e-b9da-d0d12674fb57",
            "isHook": false,
            "skipped": true
          },
          {
            "title": "should be updated with a new name",
            "fullTitle": "User should be updated with a new name",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "api.put('/users/1')\n    .set('Accept', 'application/x-www-form-urlencoded')\n    .send({\n        name: \"Kevin\",\n        email: \"kevin@example.com\",\n        phoneNumber: \"9998887777\",\n        role: \"editor\"\n    })\n    .expect(200)\n    .end((err, res) => {\n        expect(res.body.name).to.equal(\"Kevin\");\n        expect(res.body.email).to.equal(\"kevin@example.com\");\n        expect(res.body.phoneNumber).to.equal(\"9998887777\");\n        expect(res.body.role).to.equal(\"editor\");\n        done();\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "2bc2b7a7-e5a3-4f73-9596-021e50df4eab",
            "isHook": false,
            "skipped": true
          },
          {
            "title": "should access their own locations",
            "fullTitle": "User should access their own locations",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "api.get('/users/1/location')\n    .set('Accept', 'application/x-www-form-urlencoded')\n    .send({\n        userId: 1\n    })\n    .expect(200)\n    .end((err, res) => {\n        expect(res.body.userId).to.equal(1);\n        expect(res.body.addressCity).to.equal(\"Portland\");\n        done();\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "336d5f4f-a72b-467d-9f88-dac1d3eec43d",
            "isHook": false,
            "skipped": true
          },
          {
            "title": "should not be able to access other users locations",
            "fullTitle": "User should not be able to access other users locations",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "api.get('/users/2/location')\n    .set('Accept', 'application/x-www-form-urlencoded')\n    .send({\n        userId: 1\n    })\n    .expect(401)\n    .end((err, res) => {\n        if (err) return done(err);\n        expect(res.error.text).to.equal(\"Unauthorized\");\n        done();\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "e39ee54b-c71c-4a88-8cdc-2ca65ee4e834",
            "isHook": false,
            "skipped": true
          }
        ],
        "suites": [],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [
          "366048fd-e480-435b-b1f4-2dd759ee7b28",
          "b8c40519-5694-41ee-9c08-630d07c541c5",
          "0683a607-ec0c-44bc-a218-8646722ed9c3",
          "b204df94-8166-461e-b9da-d0d12674fb57",
          "2bc2b7a7-e5a3-4f73-9596-021e50df4eab",
          "336d5f4f-a72b-467d-9f88-dac1d3eec43d",
          "e39ee54b-c71c-4a88-8cdc-2ca65ee4e834"
        ],
        "duration": null,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "50c5e6e6-f845-4b8e-bdf5-423b802a6b09",
        "title": "Typi code",
        "fullFile": "C:\\ccviews\\ApiTestAutomation\\test\\test2.spec.js",
        "file": "\\test\\test2.spec.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should have posts",
            "fullTitle": "Typi code should have posts",
            "timedOut": false,
            "duration": 1065,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "api.get('/db')\n    .expect(200)\n    .end((err, res) => {\n        expect(res.body).to.have.property('posts');\n        expect(res.body.posts).to.not.equal(null);\n        done();\n    })",
            "err": {},
            "isRoot": false,
            "uuid": "d4d2e46f-e83e-4d53-8289-38562e875c79",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should have comments",
            "fullTitle": "Typi code should have comments",
            "timedOut": false,
            "duration": 695,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "api.get('/db')\n    .expect(200)\n    .end((err, res) => {\n        expect(res.body).to.have.property('comments');\n        done();\n    });",
            "err": {},
            "isRoot": false,
            "uuid": "0ce374e6-f4fe-4797-ad1b-f680c9c763e4",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "d4d2e46f-e83e-4d53-8289-38562e875c79",
          "0ce374e6-f4fe-4797-ad1b-f680c9c763e4"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1760,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "3af7b33e-02ef-4e22-89e4-298e708e07ec",
        "title": "Authentication",
        "fullFile": "C:\\ccviews\\ApiTestAutomation\\test\\test3.spec.js",
        "file": "\\test\\test3.spec.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "errors if wrong basic auth",
            "fullTitle": "Authentication errors if wrong basic auth",
            "timedOut": false,
            "duration": 1006,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "api.get('/blog')\n    .set('x-api-key', '123myapikey')\n    .auth('incorrect', 'credentials')\n    .expect(401, done)",
            "err": {
              "message": "Error: ECONNREFUSED: Connection refused",
              "estack": "Error: ECONNREFUSED: Connection refused\n    at Test.assert (node_modules\\supertest\\lib\\test.js:165:15)\n    at localAssert (node_modules\\supertest\\lib\\test.js:131:12)\n    at C:\\ccviews\\ApiTestAutomation\\node_modules\\supertest\\lib\\test.js:128:5\n    at Test.Request.callback (node_modules\\superagent\\lib\\node\\index.js:728:3)\n    at ClientRequest.req.once.err (node_modules\\superagent\\lib\\node\\index.js:647:10)\n    at Socket.socketErrorListener (_http_client.js:392:9)\n    at emitErrorNT (internal/streams/destroy.js:82:8)\n    at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
            },
            "isRoot": false,
            "uuid": "14e2367d-409a-460a-aac2-af5306fd9c2a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "errors if bad x-api-key header",
            "fullTitle": "Authentication errors if bad x-api-key header",
            "timedOut": false,
            "duration": 1001,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "api.get('/blog')\n    .auth('correct', 'credentials')\n    .expect(401)\n    .expect({\n        error: \"Bad or missing app identification header\"\n    }, done);",
            "err": {
              "message": "Error: ECONNREFUSED: Connection refused",
              "estack": "Error: ECONNREFUSED: Connection refused\n    at Test.assert (node_modules\\supertest\\lib\\test.js:165:15)\n    at localAssert (node_modules\\supertest\\lib\\test.js:131:12)\n    at C:\\ccviews\\ApiTestAutomation\\node_modules\\supertest\\lib\\test.js:128:5\n    at Test.Request.callback (node_modules\\superagent\\lib\\node\\index.js:728:3)\n    at ClientRequest.req.once.err (node_modules\\superagent\\lib\\node\\index.js:647:10)\n    at Socket.socketErrorListener (_http_client.js:392:9)\n    at emitErrorNT (internal/streams/destroy.js:82:8)\n    at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
            },
            "isRoot": false,
            "uuid": "024cdd2f-bc37-4627-8713-cb8e298b8596",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [],
        "failures": [
          "14e2367d-409a-460a-aac2-af5306fd9c2a",
          "024cdd2f-bc37-4627-8713-cb8e298b8596"
        ],
        "pending": [],
        "skipped": [],
        "duration": 2007,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "21f75ffc-d77f-4dec-bdba-ba36d6712b91",
        "title": "/blog",
        "fullFile": "C:\\ccviews\\ApiTestAutomation\\test\\test3.spec.js",
        "file": "\\test\\test3.spec.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "returns blog posts as JSON",
            "fullTitle": "/blog returns blog posts as JSON",
            "timedOut": false,
            "duration": 1002,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "api.get('/blog')\n    .set('x-api-key', '123myapikey')\n    .auth('correct', 'credentials')\n    .expect(200)\n    .expect('Content-Type', /json/)\n    .end((err, res) => {\n        if (err) return done(err);\n        res.body.should.have.property('posts').and.be.instanceof(Array);\n        done();\n    });",
            "err": {
              "message": "Error: ECONNREFUSED: Connection refused",
              "estack": "Error: ECONNREFUSED: Connection refused\n    at Test.assert (node_modules\\supertest\\lib\\test.js:165:15)\n    at localAssert (node_modules\\supertest\\lib\\test.js:131:12)\n    at C:\\ccviews\\ApiTestAutomation\\node_modules\\supertest\\lib\\test.js:128:5\n    at Test.Request.callback (node_modules\\superagent\\lib\\node\\index.js:728:3)\n    at ClientRequest.req.once.err (node_modules\\superagent\\lib\\node\\index.js:647:10)\n    at Socket.socketErrorListener (_http_client.js:392:9)\n    at emitErrorNT (internal/streams/destroy.js:82:8)\n    at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)\n    at process._tickCallback (internal/process/next_tick.js:63:19)"
            },
            "isRoot": false,
            "uuid": "45d0990a-e434-493b-a22a-ad1353b5aa78",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [],
        "failures": [
          "45d0990a-e434-493b-a22a-ad1353b5aa78"
        ],
        "pending": [],
        "skipped": [],
        "duration": 1002,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "dbab1d91-7ed4-48a3-9fe3-1f3764ca20a5",
        "title": "Text Axios",
        "fullFile": "C:\\ccviews\\ApiTestAutomation\\test\\test4_axis.spec.js",
        "file": "\\test\\test4_axis.spec.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Text typiCode",
            "fullTitle": "Text Axios Text typiCode",
            "timedOut": false,
            "duration": 1021,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let res = await axios.post(\"https://jsonplaceholder.typicode.com/posts\");\nconsole.log(`Status code: ${res.status}`);\nconsole.log(`Status text: ${res.statusText}`);\nconsole.log(`Request method: ${res.request.method}`);\nconsole.log(`Path: ${res.request.path}`);\nconsole.log(`Date: ${res.headers.date}`);\nconsole.log(`Data: ${res.data}`);",
            "err": {},
            "isRoot": false,
            "uuid": "20b1631a-b279-4a81-9e1b-b3132be29a03",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "20b1631a-b279-4a81-9e1b-b3132be29a03"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1021,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}